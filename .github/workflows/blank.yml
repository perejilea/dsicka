name: "[MSX] Backup Codespace to MEGA"

on:
  push:
    paths:
      - 'backup/**'
  schedule:
    - cron: '0 0,6,12,18 * * *'
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código + LFS
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Crear archivo comprimido con timestamp
        run: |
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
          BACKUP_FILENAME="MSX-Backup_$TIMESTAMP.tar.gz"
          echo "BACKUP_FILENAME=$BACKUP_FILENAME" >> $GITHUB_ENV
          tar -czf "$BACKUP_FILENAME" backup/ || [[ $? -eq 0 || $? -eq 1 || $? -eq 2 ]]

      - name: Instalar MEGAcmd (Con dependencias)
        run: |
          # Actualiza la lista de paquetes
          sudo apt-get update
          
          # Instalar la dependencia faltante LIBFUSE2
          sudo apt-get install -y libfuse2
          
          # Descarga el paquete de megacmd
          curl -s https://mega.nz/linux/repo/xUbuntu_20.04/amd64/megacmd-xUbuntu_20.04_amd64.deb -o /tmp/megacmd.deb
          
          # Instala el paquete de megacmd
          sudo dpkg -i /tmp/megacmd.deb
          
          # Corrección de cualquier otra dependencia faltante
          sudo apt-get install -f -y
          
          # Limpiar archivo temporal
          rm -f /tmp/megacmd.deb
          
          # Verificar instalación
          mega-version && echo "✅ MEGAcmd instalado correctamente"

      - name: Subir backup a MEGA
        run: |
          mega-login "${{ secrets.MEGA_EMAIL }}" "${{ secrets.MEGA_PASSWORD }}"
          mega-mkdir -p "/Root/MSX-Backup"
          mega-put "$BACKUP_FILENAME" "/Root/MSX-Backup/"
          echo "✅ Backup subido exitosamente: $BACKUP_FILENAME"
          mega-logout
        env:
          BACKUP_FILENAME: ${{ env.BACKUP_FILENAME }}

      - name: Limpiar backups antiguos (Mantener últimos 7 días)
        run: |
          FECHA_LIMITE=$(date -d "7 days ago" +%s)
          echo "🗑️  Eliminando backups anteriores a: $(date -d @$FECHA_LIMITE)"
          mega-login "${{ secrets.MEGA_EMAIL }}" "${{ secrets.MEGA_PASSWORD }}"
          mega-ls /Root/MSX-Backup/ | while read -r LINE; do
            if [[ $LINE == MSX-Backup_* ]]; then
              FECHA_ARCHIVO=$(echo "$LINE" | sed 's/MSX-Backup_\([0-9-]*\)_\([0-9-]*\)\.tar\.gz/\1 \2/' | tr '_' ':')
              TIMESTAMP_ARCHIVO=$(date -d "$FECHA_ARCHIVO" +%s 2>/dev/null)
              if [[ -n "$TIMESTAMP_ARCHIVO" && $TIMESTAMP_ARCHIVO -lt $FECHA_LIMITE ]]; then
                echo "Eliminando archivo antiguo: $LINE"
                mega-rm "/Root/MSX-Backup/$LINE"
              fi
            fi
          done
          mega-logout

      - name: Limpiar archivo local temporal
        run: rm -f "$BACKUP_FILENAME"
